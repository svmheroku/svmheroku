%h4 Blog

%hr/

%a(href="/blog#b2011_0920")
  %h4#b2011_0920 2011-09-20 A Search For Correlation

On September 13, 2001 I gave a presentation at the Bay Area Trading Systems Interest Group:
%br/
%br/
%a(href="http://www.meetup.com/batsig/" target="m")http://www.meetup.com/batsig
%br/
%br/

An enhanced version of that presentation is displayed below.

%h4 Summary

I start off with a discussion about downloading a copy of Oracle RDBMS software
and installing it on a laptop.
%br/
%br/

Next I pick a stock we love or hate and I show how to download many years of CSV data for it from 
Yahoo to a laptop.
%br/
%br/

Then I demonstrate loading that data into an Oracle table using a utility called SQL-Loader.
%br/
%br/

Next I decide on a holding-period which we want to simulate. Probably one week would be a good choice.
%br/
%br/

Then I demonstrate how to create a table from the CSV data which contains useful columns:
%br/
%ul
  %li tkr
  %li date
  %li date1week_later
  %li price1
  %li price2
  %li mvg_avg_4wk_slope
  %li gain1week

Next I demonstrate how to visualize gain1week as a distribution (hint: it will look like a bell curve).
%br/
%br/

Then I demonstrate how to visualize mvg_avg_4wk_slope as a distribution (hint: it will look like a bell curve).
%br/
%br/

Next I demonstrate how to visualize mvg_avg_4wk_slope and gain1week as points in a scatter plot.
%br/
%br/

Next I answer the question, when mvg_avg_4wk_slope, was more than two standard deviations from the mean, how did gain1week usually react? (hint: we will use Pearson's Correlation here)
%br/
%br/

Next I discuss the question, what besides mvg_avg_4wk_slope could we mix with gain1week in a scatter plot?
%br/
%br/

My goal is to find some calculated attribute of stock price which has a large correlation with gain1week (and thus be predictive).
%br/
%br/

%hr/
%h4 Oracle RDBMS Software

How to Download Oracle:
%br/
%ul
  %li
    %a(href="http://oracle.com" target="o") http://oracle.com
  %li Look for: "Downloads"
  %li Then, Look for: "Database 11g Enterprise"
  %li
    Then, Look for this:
    %br/
    (11.2.0.1.0)
    %br/
    Download Microsoft Windows (32-bit)     File 1, File 2  (2GB)  See All
    %br/
    Download Microsoft Windows (x64)        File 1, File 2  (2GB)  See All
    %br/
    Download Linux x86      File 1, File 2  (2GB)  See All
    %br/
    Download Linux x86-64   File 1, File 2  (2GB)  See All 
    %br/
  %li I prefer Linux (Ubuntu 10.04) so I can drive Oracle SQL scripts with Linux Shell scripts
  %li If you only have windows, try vmware player in windows, Linux (Ubuntu 8.04) in vmware, Oracle in Linux
  %li
    %a(href="http://www.google.com/search?q=Install+ubuntu+in+vmware+player+in+windows" target="g")
      http://www.google.com/search?q=Install+ubuntu+in+vmware+player+in+windows


Installation:
%ul
  %li Oracle installation documentation is ok for windows.
  %li
    Linux:
    %br/
    %a(href="http://www.google.com/search?q=pythian+install+oracle+11g+on+ubuntu" target="g")
      http://www.google.com/search?q=pythian+install+oracle+11g+on+ubuntu
    %br/
    %a(href="http://www.pythian.com/news/13291/installing-oracle-11gr2-enterprise-edition-on-ubuntu-10-04-lucid-lynx/" target="p")
      http://www.pythian.com/news/13291/installing-oracle-11gr2-enterprise-edition-on-ubuntu-10-04-lucid-lynx/
%br/

%h4
  Pick a stock, SPY, download many years of CSV data for it

The URL for SPY:
%br/
%br/
%a(href="http://ichart.finance.yahoo.com/table.csv?s=SPY" target="y")
  http://ichart.finance.yahoo.com/table.csv?s=SPY
%br/
%br/

I Demo Linux-wget-shell-command to download CSV for SPY into SPY.csv:
%br/
%pre.bash
  :preserve
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ 
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ wget --output-document=SPY.csv http://ichart.finance.yahoo.com/table.csv?s=SPY
    --2011-09-20 23:05:46--  http://ichart.finance.yahoo.com/table.csv?s=SPY
    Resolving ichart.finance.yahoo.com... 67.195.146.181
    Connecting to ichart.finance.yahoo.com|67.195.146.181|:80... connected.
    HTTP request sent, awaiting response... 200 OK
    Length: unspecified [text/csv]
    Saving to: `SPY.csv'
    
    [    <=>                                ] 246,771      308K/s   in 0.8s    
    
    2011-09-20 23:05:47 (308 KB/s) - `SPY.csv' saved [246771]
    
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ 
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ 

%br/
%br/


I Add a column to SPY.csv and then inspect it:
%br/
%pre.bash
  :preserve
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ 
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ 
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ cat SPY.csv | awk  '{print "SPY,"$0}' | grep 0 > ystk_stage.csv
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ 
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ 
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ head ystk_stage.csv 
    SPY,2011-09-19,119.53,120.93,118.72,120.31,239978600,120.31
    SPY,2011-09-16,121.29,121.97,120.32,121.52,284528300,121.52
    SPY,2011-09-15,120.65,121.47,119.40,121.43,326777200,120.81
    SPY,2011-09-14,118.34,120.80,116.72,119.37,319389500,118.76
    SPY,2011-09-13,117.05,118.18,116.22,117.74,272514700,117.13
    SPY,2011-09-12,114.47,116.76,114.05,116.67,305793500,116.07
    SPY,2011-09-09,117.68,119.06,115.28,115.92,380195100,115.32
    SPY,2011-09-08,119.57,120.94,118.77,119.04,250568200,118.43
    SPY,2011-09-07,118.76,120.34,118.36,120.29,209803200,119.67
    SPY,2011-09-06,114.39,117.16,114.38,116.99,285130500,116.39
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ tail ystk_stage.csv
    SPY,1993-02-11,44.78,45.13,44.78,44.94,19500,32.21
    SPY,1993-02-10,44.66,44.75,44.53,44.72,379600,32.05
    SPY,1993-02-09,44.81,44.81,44.56,44.66,122100,32.01
    SPY,1993-02-08,44.97,45.13,44.91,44.97,596100,32.23
    SPY,1993-02-05,44.97,45.06,44.72,44.97,492100,32.23
    SPY,1993-02-04,44.97,45.09,44.47,45.00,531500,32.25
    SPY,1993-02-03,44.41,44.84,44.38,44.81,529400,32.11
    SPY,1993-02-02,44.22,44.38,44.13,44.34,201300,31.78
    SPY,1993-02-01,43.97,44.25,43.97,44.25,480500,31.71
    SPY,1993-01-29,43.97,43.97,43.75,43.94,1003200,31.49
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ 
    oracle@z2:/pt/s/rluck/svmd/bp/cf$ 


%h4
  Load that data into an Oracle table using a utility called SQL-Loader.

I Create a table:
%br/

%pre.sql
  :preserve
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ which sqt
    /pt/s/bin/sqt
    oracle@z2:/pt/s/rluck/svmd/bp$ cat /pt/s/bin/sqt
    #!/bin/bash
    
    . /pt/s/oracle/.orcl
    
    sqlplus trade/t $@
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ sqt @cr_ystk_stage.sql 
    
    SQL*Plus: Release 11.2.0.1.0 Production on Tue Sep 20 23:23:09 2011
    
    Copyright (c) 1982, 2009, Oracle.  All rights reserved.
    
    
    Connected to:
    Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    
    23:23:09 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
    
    Session altered.
    
    Elapsed: 00:00:00.01
    23:23:09 SQL> 
    23:23:09 SQL> --
    23:23:09 SQL> -- cr_ystk_stage.sql
    23:23:09 SQL> --
    23:23:09 SQL> 
    23:23:09 SQL> DROP TABLE ystk_stage;
    
    Table dropped.
    
    Elapsed: 00:00:00.22
    23:23:09 SQL> 
    23:23:09 SQL> 
    23:23:09 SQL> CREATE TABLE ystk_stage(
    23:23:09   2  tkr VARCHAR2(11)
    23:23:09   3  ,ydate DATE
    23:23:09   4  ,opn NUMBER
    23:23:09   5  ,mx NUMBER
    23:23:09   6  ,mn NUMBER
    23:23:09   7  ,clse0 NUMBER
    23:23:09   8  ,vol NUMBER
    23:23:09   9  ,clse NUMBER)
    23:23:09  10  /
    
    Table created.
    
    Elapsed: 00:00:00.06
    23:23:09 SQL> exit
    Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    oracle@z2:/pt/s/rluck/svmd/bp$ 

%br/
%br/

I Create a CTL file named ystk_stage.ctl (using editor):
%br/

%pre.sql
  :preserve
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ cat ystk_stage.ctl 
    LOAD DATA
    INFILE 'ystk_stage.csv'
    replace INTO TABLE ystk_stage
    FIELDS TERMINATED BY ','
    TRAILING NULLCOLS
    (
    tkr    CHAR             NULLIF (tkr=BLANKS)
    ,ydate DATE "YYYY-MM-DD" NULLIF (ydate=BLANKS)
    ,opn   DECIMAL EXTERNAL NULLIF (opn=BLANKS)
    ,mx    DECIMAL EXTERNAL NULLIF (mx=BLANKS)
    ,mn    DECIMAL EXTERNAL NULLIF (mn=BLANKS)
    ,clse0 DECIMAL EXTERNAL NULLIF (clse0=BLANKS)
    ,vol   DECIMAL EXTERNAL NULLIF (vol=BLANKS)
    ,clse  DECIMAL EXTERNAL NULLIF (clse=BLANKS)
    )
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 

%br/
%br/

I Call SQL*Loader:
%br/

%pre.bash
  :preserve
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ sqlldr trade/t bindsize=20971520 readsize=20971520 rows=123456 control=ystk_stage.ctl
    
    SQL*Loader: Release 11.2.0.1.0 - Production on Wed Sep 21 07:15:26 2011
    
    Copyright (c) 1982, 2009, Oracle and/or its affiliates.  All rights reserved.
    
    Commit point reached - logical record count 4696
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ grep loaded ystk_stage.log
    Table YSTK_STAGE, loaded from every logical record.
      4696 Rows successfully loaded.
      0 Rows not loaded due to data errors.
      0 Rows not loaded because all WHEN clauses were failed.
      0 Rows not loaded because all fields were null.
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 

%br/
%br/


I Inspect the data:
%br/

%pre.sql
  :preserve
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ sqt
    
    SQL*Plus: Release 11.2.0.1.0 Production on Wed Sep 21 07:17:29 2011
    
    Copyright (c) 1982, 2009, Oracle.  All rights reserved.
    
    
    Connected to:
    Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    
    07:17:29 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
    
    Session altered.
    
    Elapsed: 00:00:00.00
    07:17:29 SQL> 
    07:17:29 SQL> SELECT tkr,ydate,clse FROM ystk_stage WHERE ydate > sysdate - 9 ORDER BY ydate;
    
    TKR     YDATE            CLSE
    ----------- ---------- ----------
    SPY     2011-09-13     117.13
    SPY     2011-09-14     118.76
    SPY     2011-09-15     120.81
    SPY     2011-09-16     121.52
    SPY     2011-09-19     120.31
    
    Elapsed: 00:00:00.00
    07:17:42 SQL> SELECT tkr,MIN(ydate),MAX(ydate),MIN(clse),MAX(clse)FROM ystk_stage GROUP BY tkr;
    
    TKR     MIN(YDATE) MAX(YDATE)  MIN(CLSE)  MAX(CLSE)
    ----------- ---------- ---------- ---------- ----------
    SPY     1993-01-29 2011-09-19      31.11      144.2
    
    Elapsed: 00:00:00.01
    07:18:01 SQL> 
    07:18:02 SQL> exit
    Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    oracle@z2:/pt/s/rluck/svmd/bp$ 

%br/
%br/
I Use SQL to create a CSV file for R to plot the data:
%br/

%pre.sql
  :preserve
    --
    -- qry_spy_clse.sql
    --
    
    SET PAGES 5555 COLSEP ","
    
    SELECT rownum rwnum,clse FROM
    (
        SELECT clse FROM ystk_stage ORDER BY ydate
    );

    SELECT TO_CHAR(ydate,'YYYY')year,clse price FROM ystk_stage ORDER BY ydate;

%br/
%br
I Use R to plot the data:
%br/

%pre.rlanguage
  :preserve
    oracle@h2:/pt/s/rluck/svmd/bp/r$
    oracle@h2:/pt/s/rluck/svmd/bp/r$
    oracle@h2:/pt/s/rluck/svmd/bp/r$ R -f qry_spy_clse.r

    
    R version 2.11.1 (2010-05-31)
    Copyright (C) 2010 The R Foundation for Statistical Computing
    ISBN 3-900051-07-0
    
    R is free software and comes with ABSOLUTELY NO WARRANTY.
    You are welcome to redistribute it under certain conditions.
    Type 'license()' or 'licence()' for distribution details.
    
      Natural language support but running in an English locale
    
    R is a collaborative project with many contributors.
    Type 'contributors()' for more information and
    'citation()' on how to cite R or R packages in publications.
    
    Type 'demo()' for some demos, 'help()' for on-line help, or
    'help.start()' for an HTML browser interface to help.
    Type 'q()' to quit R.
    
    > # qry_spy_clse.r
    > # I use this file to read prices of SPY from qry_spy_clse.csv
    > # Then, I plot them.
    > # I build qry_spy_clse.csv by hand from qry_spy_clse.sql output
    > qry_spy_clse = read.csv("qry_spy_clse.csv")
    > 
    > # Define the .png file which will hold the output:
    > png("qry_spy_clse.png",width = 800, height = 1800)
    > 
    > # Declare the output will be in 2 rows and 1 column:
    > par(mfrow = c(2,1))
    > 
    > # Show the data as a sequence of about 5,000 prices ordered by day number after Jan 1993:
    > day.vector = 1:length(qry_spy_clse$PRICE)
    > plot(day.vector,qry_spy_clse$PRICE,type="h",col="#444444",xlim=c(0,5000))
    > grid(col="black")
    > 
    > # Show the data as a boxplot grouped by year:
    > boxplot (qry_spy_clse$PRICE ~ qry_spy_clse$YEAR , pch=20)
    > grid(col="black")
    > 
    > dev.off()
    null device 
              1 
    > 
    > 

%br/
%br/
I Show the 2 plots of the SPY prices from Yahoo.
%br/
%br/
The first plot is just a simple time series of 4,696 prices.
%br/
%br/
The 2nd plot is a box plot of the data grouped by year.
%br/
%br/
For each year the box plot shows min, max, median, quartiles and outliers.
%br/
%br/

It's obvious that 2011 has the most outliers and they are negative.
%br/
%br/

I would have expected 2008 to have the most outliers but I see none in the box plot.
%br/
%br/
%img(src="/images/qry_spy_clse.png")
%br/
%br/
%h4 I demonstrate how to create a table from the CSV data which contains useful columns

%pre.sql
  :preserve
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ sqt @cr_batsig.sql
    
    SQL*Plus: Release 11.2.0.1.0 Production on Wed Sep 21 08:16:11 2011
    
    Copyright (c) 1982, 2009, Oracle.  All rights reserved.
    
    
    Connected to:
    Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    
    08:16:11 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
    
    Session altered.
    
    Elapsed: 00:00:00.01
    08:16:11 SQL> 
    08:16:11 SQL> --
    08:16:11 SQL> -- cr_batsig.sql
    08:16:11 SQL> --
    08:16:11 SQL> 
    08:16:11 SQL> -- Get prices from past and future in same row as price1:
    08:16:11 SQL> CREATE OR REPLACE VIEW batsigv1 AS
    08:16:11   2  SELECT
    08:16:11   3  tkr
    08:16:11   4  ,ydate
    08:16:11   5  ,LEAD(ydate,5,NULL)OVER(PARTITION BY tkr ORDER BY ydate) date1week_later
    08:16:11   6  ,LAG(clse,1,NULL)OVER(PARTITION BY tkr ORDER BY ydate) price0
    08:16:11   7  ,clse price1
    08:16:11   8  ,LEAD(clse,5,NULL)OVER(PARTITION BY tkr ORDER BY ydate) price2
    08:16:11   9  FROM ystk_stage
    08:16:11  10  -- Prevent divide by 0 later on:
    08:16:11  11  WHERE clse>0
    08:16:11  12  /
    
    View created.
    
    Elapsed: 00:00:00.05
    08:16:11 SQL> 
    08:16:11 SQL> -- Get mvg avg for today and yesterday. Their Difference is slope.
    08:16:11 SQL> CREATE OR REPLACE VIEW batsigv2 AS
    08:16:11   2  SELECT
    08:16:11   3  tkr
    08:16:11   4  ,ydate
    08:16:11   5  ,date1week_later
    08:16:11   6  ,price1
    08:16:11   7  ,price2
    08:16:11   8  ,(price2 - price1)/price1 gain1week
    08:16:11   9  ,AVG(price1)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4*5 PRECEDING AND CURRENT ROW)
    08:16:11  10  -AVG(price0)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4*5 PRECEDING AND CURRENT ROW)mas1
    08:16:11  11  FROM batsigv1
    08:16:11  12  /
    
    View created.
    
    Elapsed: 00:00:00.03
    08:16:11 SQL> 
    08:16:11 SQL> DROP TABLE batsig;
    
    Table dropped.
    
    Elapsed: 00:00:00.11
    08:16:11 SQL> CREATE TABLE batsig COMPRESS AS
    08:16:11   2  SELECT
    08:16:11   3  tkr
    08:16:11   4  ,ydate
    08:16:11   5  ,date1week_later
    08:16:11   6  ,price1
    08:16:11   7  ,price2
    08:16:11   8  ,gain1week
    08:16:11   9  ,mas1/price1 mvg_avg_slope
    08:16:11  10  FROM batsigv2
    08:16:11  11  WHERE price2 > 0
    08:16:11  12  AND mas1 IS NOT NULL
    08:16:11  13  /
    
    Table created.
    
    Elapsed: 00:00:00.20
    08:16:12 SQL> 
    08:16:12 SQL> SELECT
    08:16:12   2  tkr
    08:16:12   3  ,ydate
    08:16:12   4  ,date1week_later
    08:16:12   5  ,price1
    08:16:12   6  ,price2
    08:16:12   7  ,mvg_avg_slope
    08:16:12   8  ,gain1week
    08:16:12   9  FROM batsig
    08:16:12  10  WHERE ydate > sysdate - 22
    08:16:12  11  /
    
    TKR     YDATE      DATE1WEEK_     PRICE1     PRICE2 MVG_AVG_SLOPE  GAIN1WEEK
    ----------- ---------- ---------- ---------- ---------- ------------- ----------
    SPY     2011-08-31 2011-09-08     121.59     118.43    -.00127282 -.02598898
    SPY     2011-09-01 2011-09-09     120.32     115.32      -.002058 -.04155585
    SPY     2011-09-02 2011-09-12     117.24     116.07     -.0009748 -.00997953
    SPY     2011-09-06 2011-09-13     116.39     117.13    -.00125604 .006357935
    SPY     2011-09-07 2011-09-14     119.67     118.76    .003179378 -.00760425
    SPY     2011-09-08 2011-09-15     118.43     120.81    .000623233 .020096259
    SPY     2011-09-09 2011-09-16     115.32     121.52    .001490676 .053763441
    SPY     2011-09-12 2011-09-19     116.07     120.31    -.00027077  .03652968
    
    8 rows selected.
    
    Elapsed: 00:00:00.02
    08:16:12 SQL> 
    08:16:12 SQL> exit
    Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 

%br/
%h4 Next I demonstrate how to visualize gain1week as a distribution

%pre.sql
  :preserve
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ sqt @gdist
    
    SQL*Plus: Release 11.2.0.1.0 Production on Wed Sep 21 08:20:48 2011
    
    Copyright (c) 1982, 2009, Oracle.  All rights reserved.
    
    
    Connected to:
    Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    
    08:20:48 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
    
    Session altered.
    
    Elapsed: 00:00:00.00
    08:20:48 SQL> 
    08:20:48 SQL> --
    08:20:48 SQL> -- gdist.sql
    08:20:48 SQL> --
    08:20:48 SQL> 
    08:20:48 SQL> -- Demonstrate how to visualize gain1week as a distribution.
    08:20:48 SQL> 
    08:20:48 SQL> -- Model a Normal Distribution:
    08:20:48 SQL> 
    08:20:48 SQL> SELECT
    08:20:48   2  MIN(gain1week)
    08:20:48   3  ,AVG(gain1week)
    08:20:48   4  ,MAX(gain1week)
    08:20:48   5  ,STDDEV(gain1week)
    08:20:48   6  FROM batsig
    08:20:48   7  /
    
    MIN(GAIN1WEEK) AVG(GAIN1WEEK) MAX(GAIN1WEEK) STDDEV(GAIN1WEEK)
    -------------- -------------- -------------- -----------------
        -.19799692     .001725962     .194084507        .025151243
    
    Elapsed: 00:00:00.07
    08:20:48 SQL> 
    08:20:48 SQL> CREATE OR REPLACE VIEW batsigv10 AS
    08:20:48   2  SELECT
    08:20:48   3  tkr
    08:20:48   4  ,ydate
    08:20:48   5  ,price1
    08:20:48   6  ,gain1week
    08:20:48   7  ,ROUND(gain1week,1)g1wr1
    08:20:48   8  ,ROUND(gain1week,2)g1wr2
    08:20:48   9  FROM batsig
    08:20:48  10  /
    
    View created.
    
    Elapsed: 00:00:00.05
    08:20:48 SQL> 
    08:20:48 SQL> -- Gather some points for a plot.
    08:20:48 SQL> 
    08:20:48 SQL> -- Start with a very rough histogram:
    08:20:48 SQL> 
    08:20:48 SQL> SELECT
    08:20:48   2  g1wr1
    08:20:48   3  ,COUNT(g1wr1) gcount
    08:20:48   4  FROM batsigv10
    08:20:48   5  GROUP BY g1wr1
    08:20:48   6  ORDER BY g1wr1
    08:20:48   7  /
    
         G1WR1     GCOUNT
    ---------- ----------
           -.2          5
           -.1        113
             0       4466
            .1        104
            .2          2
    
    Elapsed: 00:00:00.01
    08:20:48 SQL> 
    08:20:48 SQL> -- Drill Down:
    08:20:48 SQL> 
    08:20:48 SQL> SELECT
    08:20:48   2  g1wr2
    08:20:48   3  ,COUNT(g1wr2) gcount
    08:20:48   4  FROM batsigv10
    08:20:48   5  GROUP BY g1wr2
    08:20:48   6  ORDER BY g1wr2
    08:20:48   7  /
    
         G1WR2     GCOUNT
    ---------- ----------
           -.2          1
          -.19          1
          -.17          1
          -.16          1
          -.15          1
          -.14          1
          -.13          1
          -.12          2
          -.11          5
           -.1          3
          -.09          7
          -.08         12
          -.07         26
          -.06         29
          -.05         74
          -.04        137
          -.03        229
          -.02        404
          -.01        632
             0        969
           .01        938
           .02        621
           .03        296
           .04        151
           .05         71
           .06         32
           .07         16
           .08         11
           .09          6
            .1          5
           .11          4
           .14          1
           .16          1
           .19          1
    
    34 rows selected.
    
    Elapsed: 00:00:00.01
    08:20:48 SQL> 
    08:20:48 SQL> 
    08:20:48 SQL> exit
    Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 
%br/
%br/
I use R to visualize the data from the second query.
%br/
%br/

I plot a simple gain-frequency-histogram with a normal distribution overlayed on top.
%br/
%br/
I show two standard deviations from the mean as two blue vertical lines.
%br/
%br/

%pre.rlanguage
  :preserve
    # gdist.r
    # I use this file to read gdist.csv which was created from gdist.sql
    # The data is a frequency count which I intend to display as a histogram.
    
    # I build gdist.csv by hand from gdist.sql output
    gdist = read.csv("gdist.csv")
    
    # Define the .png file which will hold the output:
    png("gdist.png",width = 800, height = 800)
    
    plot(gdist$G1WR2,gdist$GCOUNT,type="h",lwd=4,col="black",xlim=c(-0.2,0.2),
      xlab="Normal Distribution(Avg:0.0017, Std.Dev.:0.025) on top of Rounded Normalized 1 Week Gains",ylab="Frequency Count")
    grid(col="black")
    
    # Now overlay another plot:
    # http://pj.freefaculty.org/R/Rtips.html#5.11
    par(new = TRUE) 
    
    g1wmin = -0.198
    g1wmax = 0.194
    g1wsd = 0.02515
    g1wmean = 0.00171
    
    x=seq(g1wmin,g1wmax,length=200)
    y=dnorm(x,mean=g1wmean,sd=g1wsd)
    plot(x,y,type="l",lwd=1,col="blue",xaxt="n", yaxt="n",xlab=" ",ylab=" ",xlim=c(-0.2,0.2))
    
    abline(v = g1wmean, col="blue",lwd=2)
    abline(v = g1wmean-2*g1wsd, col="blue",lwd=2)
    abline(v = g1wmean+2*g1wsd, col="blue",lwd=2)
    
    dev.off()
%br/
%br/

%img(src="/images/gdist.png")
%br/
%br/
Interpretation:
%br/
%br/
I see a long tail of negative gains and bias towards positive gains near the mean.
%br/
%br/
Next I plot data from the tails.
%br/
%br/


%pre.rlanguage
  :preserve
    # gdist2.r
    # I use this file to read gdist2.csv which was created from gdist.csv
    # The data is a frequency count which I intend to display as a histogram.
    
    # I build gdist2.csv by hand from gdist.csv
    gdist2 = read.csv("gdist2.csv")
    
    # Define the .png file which will hold the output:
    png("gdist2.png",width = 800, height = 800)
    
    # Plot the R and L tails:
    plot(gdist2$G1WR2,gdist2$GCOUNT,type="h",lwd=4,col="black",xlim=c(-0.2,0.2),
      xlab="Left and Right Tails of Rounded Normalized 1 Week Gains",ylab="Frequency Count")
    grid(col="black")
    
    # I pulled these values from my Oracle rpt:
    g1wmin = -0.198
    g1wmax = 0.194
    g1wsd = 0.02515
    g1wmean = 0.00171
    
    # Show Mean and 2 stddevs from mean as vertical lines:
    abline(v = g1wmean, col="blue",lwd=2)
    abline(v = g1wmean-2*g1wsd, col="blue",lwd=2)
    abline(v = g1wmean+2*g1wsd, col="blue",lwd=2)
    
    dev.off()
%br/
%br/

%img(src="/images/gdist2.png")

%br/
%br/
Again,
I see a long tail of negative gains and bias towards positive gains near the mean.
%br/
%br/
I show two standard deviations from the mean as two blue vertical lines.
%br/
%br/
The blue vertical line in the middle is at the mean.
%br/
%br/
Before I started this exercise I assumed that the histogram of gains would resemble a bell curve.
%br/
%br/
I was wrong; instead it looks like a narrow triangle with a long tail on the left.
%br/
%br/


%h4 Next, I demonstrate how to visualize mvg_avg_4wk_slope as a distribution

As before I collect slope frequencies using a SQL script.
%br/
%br/

%pre.sql
  :preserve
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ sqt @ma_gdist
    
    SQL*Plus: Release 11.2.0.1.0 Production on Wed Sep 21 09:12:18 2011
    
    Copyright (c) 1982, 2009, Oracle.  All rights reserved.
    
    
    Connected to:
    Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    
    09:12:18 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
    
    Session altered.
    
    Elapsed: 00:00:00.01
    09:12:18 SQL> 
    09:12:18 SQL> --
    09:12:19 SQL> -- ma_gdist.sql
    09:12:19 SQL> --
    09:12:19 SQL> 
    09:12:19 SQL> -- Demonstrate how to visualize gain1week     as a distribution.
    09:12:19 SQL> -- Demonstrate how to visualize mvg_avg_slope as a distribution.
    09:12:19 SQL> 
    09:12:19 SQL> -- Model a Normal Distribution:
    09:12:19 SQL> 
    09:12:19 SQL> SELECT
    09:12:19   2  -- MIN(gain1week)
    09:12:19   3  -- ,AVG(gain1week)
    09:12:19   4  -- ,MAX(gain1week)
    09:12:19   5  -- ,STDDEV(gain1week)
    09:12:19   6  -- ,MIN(mvg_avg_slope)
    09:12:19   7  MIN(mvg_avg_slope)
    09:12:19   8  ,AVG(mvg_avg_slope)
    09:12:19   9  ,MAX(mvg_avg_slope)
    09:12:19  10  ,STDDEV(mvg_avg_slope)
    09:12:19  11  FROM batsig
    09:12:19  12  /
    
    MIN(MVG_AVG_SLOPE) AVG(MVG_AVG_SLOPE) MAX(MVG_AVG_SLOPE) STDDEV(MVG_AVG_SLOPE)
    ------------------ ------------------ ------------------ ---------------------
             -.0209343         .000223191         .009013965            .002369312
    
    Elapsed: 00:00:00.04
    09:12:19 SQL> 
    09:12:19 SQL> CREATE OR REPLACE VIEW batsigv10 AS
    09:12:19   2  SELECT
    09:12:19   3  tkr
    09:12:19   4  ,ydate
    09:12:19   5  ,price1
    09:12:19   6  ,gain1week
    09:12:19   7  ,ROUND(gain1week,1)g1wr1
    09:12:19   8  ,ROUND(gain1week,2)g1wr2
    09:12:19   9  ,mvg_avg_slope
    09:12:19  10  ,ROUND(mvg_avg_slope,1)masr1
    09:12:19  11  ,ROUND(mvg_avg_slope,2)masr2
    09:12:19  12  ,ROUND(mvg_avg_slope,3)masr3
    09:12:19  13  FROM batsig
    09:12:19  14  /
    
    View created.
    
    Elapsed: 00:00:00.14
    09:12:19 SQL> 
    09:12:19 SQL> -- Visualize a histogram:
    09:12:19 SQL> 
    09:12:19 SQL> SELECT
    09:12:19   2  masr3
    09:12:19   3  ,COUNT(masr3) gcount
    09:12:19   4  FROM batsigv10
    09:12:19   5  GROUP BY masr3
    09:12:19   6  ORDER BY masr3
    09:12:19   7  /
    
         MASR3     GCOUNT
    ---------- ----------
         -.021          1
          -.02          1
         -.018          1
         -.017          2
         -.015          1
         -.014          1
         -.013          2
         -.012          6
         -.011          3
          -.01          7
         -.009         13
         -.008         12
         -.007         19
         -.006         40
         -.005         57
         -.004        103
         -.003        206
         -.002        366
         -.001        546
             0        881
          .001       1121
          .002        792
          .003        331
          .004        103
          .005         45
          .006         18
          .007          7
          .008          3
          .009          2
    
    29 rows selected.
    
    Elapsed: 00:00:00.02
    09:12:19 SQL> 
    09:12:19 SQL> 
    09:12:19 SQL> exit
    Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    oracle@z2:/pt/s/rluck/svmd/bp$ 
%br/
%br/
As before, I see a long tail left of the mean.
%br/
%br/
Unlike the gain frequencies, it seems that the mean is further to the right; it is more positive.
%br/
%br/
I used R to plot the data:
%br/
%br/
%pre.rlanguage
  :preserve
    # masr3.r
    # I use this file to read masr3.csv which was created from ma_gdist.sql
    # The data is a frequency count which I intend to display as a histogram.
    
    # I build masr3.csv by hand from preso.txt
    masr3 = read.csv("masr3.csv")
    
    # Define the .png file which will hold the output:
    png("masr3.png",width = 800, height = 800)
    
    # Plot the R and L tails:
    plot(masr3$MASR3,masr3$GCOUNT,type="h",lwd=4,col="black",xlim=c(-0.025,0.025),
      xlab="Rounded Normalized Moving Average Slopes",ylab="Frequency Count")
    grid(col="black")
    
    # I pulled these values from my Oracle rpt:
    masr3min = -0.0209
    masr3max = 0.00901
    masr3sd = 0.00237
    masr3mean = 0.000223
    
    # Show Mean and 2 stddevs from mean as vertical lines:
    abline(v = masr3mean, col="blue",lwd=2)
    abline(v = masr3mean-2*masr3sd, col="blue",lwd=2)
    abline(v = masr3mean+2*masr3sd, col="blue",lwd=2)
    
    
    # Now overlay another plot:
    # http://pj.freefaculty.org/R/Rtips.html#5.11
    par(new = TRUE) 
    x=seq(masr3min,masr3max,length=200)
    y=dnorm(x,mean=masr3mean,sd=masr3sd)
    plot(x,y,type="l",lwd=1,col="blue",xaxt="n", yaxt="n",xlab=" ",ylab=" ",xlim=c(-0.025,0.025))
    
    dev.off()
%br/
%br/
%img(src="/images/masr3.png")
%br/
%br/
This histogram  resembles the histogram of gains.
It looks like a narrow triangle with a long tail on the left.
%br/
%br/

%h4
  Next I answer the question, 
  when mvg_avg_4wk_slope, was more than two standard deviations from the mean, 
  how did gain1week usually react? 

SQL is well suited to answer this question as demonstrated by the script below:

%br/
%br/

%pre.sql
  :preserve

    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ sqt @
    
    SQL*Plus: Release 11.2.0.1.0 Production on Wed Sep 21 09:28:47 2011
    
    Copyright (c) 1982, 2009, Oracle.  All rights reserved.
    
    
    Connected to:
    Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    
    09:28:47 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
    
    Session altered.
    
    Elapsed: 00:00:00.00
    09:28:47 SQL> 
    09:28:47 SQL> --
    09:28:47 SQL> -- corr_spy.sql
    09:28:47 SQL> --
    09:28:47 SQL> 
    09:28:47 SQL> -- Start by showing a count of all the trading days:
    09:28:47 SQL> SELECT COUNT(ydate)FROM batsig;
    
    COUNT(YDATE)
    ------------
            4690
    
    Elapsed: 00:00:00.01
    09:28:47 SQL> 
    09:28:47 SQL> -- Now go on a quest for correlation
    09:28:47 SQL> -- between extreme 4 wk moving avg slopes and resulting 1 week gain:
    09:28:47 SQL> 
    09:28:47 SQL> SELECT
    09:28:47   2  CASE WHEN SIGN(mvg_avg_slope)>0 THEN'slope_up'ELSE'slope_down'END up_down
    09:28:47   3  ,CORR(mvg_avg_slope,gain1week)corr_mas_g1w
    09:28:47   4  ,COUNT(mvg_avg_slope)         occurrences
    09:28:47   5  ,AVG(gain1week)               avg_gain1week
    09:28:47   6  ,SUM(gain1week)               sum_gain1week
    09:28:47   7  FROM batsig
    09:28:47   8  WHERE ABS(mvg_avg_slope)>= 0.004
    09:28:47   9  GROUP BY SIGN(mvg_avg_slope)
    09:28:47  10  /
    
    UP_DOWN    CORR_MAS_G1W OCCURRENCES AVG_GAIN1WEEK SUM_GAIN1WEEK
    ---------- ------------ ----------- ------------- -------------
    slope_up     .064292553         111    -.00269497    -.29914135
    slope_down   -.28823126         211    .006379264     1.3460247
    
    Elapsed: 00:00:00.03
    09:28:47 SQL> 
    09:28:47 SQL> SELECT
    09:28:47   2  CASE WHEN SIGN(mvg_avg_slope)>0 THEN'slope_up'ELSE'slope_down'END up_down
    09:28:47   3  ,CORR(mvg_avg_slope,gain1week)corr_mas_g1w
    09:28:47   4  ,COUNT(mvg_avg_slope)         occurrences
    09:28:47   5  ,AVG(gain1week)               avg_gain1week
    09:28:47   6  ,SUM(gain1week)               sum_gain1week
    09:28:47   7  FROM batsig
    09:28:47   8  WHERE ABS(mvg_avg_slope)>= 0.0045
    09:28:47   9  GROUP BY SIGN(mvg_avg_slope)
    09:28:47  10  /
    
    UP_DOWN    CORR_MAS_G1W OCCURRENCES AVG_GAIN1WEEK SUM_GAIN1WEEK
    ---------- ------------ ----------- ------------- -------------
    slope_up     .094249655          75    -.00220989    -.16574172
    slope_down   -.27570685         166    .010005402    1.66089671
    
    Elapsed: 00:00:00.00
    09:28:47 SQL> 
    09:28:47 SQL> SELECT
    09:28:47   2  CASE WHEN SIGN(mvg_avg_slope)>0 THEN'slope_up'ELSE'slope_down'END up_down
    09:28:47   3  ,CORR(mvg_avg_slope,gain1week)corr_mas_g1w
    09:28:47   4  ,COUNT(mvg_avg_slope)         occurrences
    09:28:47   5  ,AVG(gain1week)               avg_gain1week
    09:28:47   6  ,SUM(gain1week)               sum_gain1week
    09:28:47   7  FROM batsig
    09:28:47   8  WHERE ABS(mvg_avg_slope)>= 0.005
    09:28:47   9  GROUP BY SIGN(mvg_avg_slope)
    09:28:47  10  /
    
    UP_DOWN    CORR_MAS_G1W OCCURRENCES AVG_GAIN1WEEK SUM_GAIN1WEEK
    ---------- ------------ ----------- ------------- -------------
    slope_up     .201186317          45    -.00283419    -.12753875
    slope_down   -.26423013         134    .013981069    1.87346323
    
    Elapsed: 00:00:00.02
    09:28:47 SQL> 

%br/
%br/
The last query shows a significant negative correlation between negative moving average slopes and resulting gains.
%br/
%br/
In plain English it could be stated like this:
%br/
%br/

When the slope of the moving average is abnormally negative 
(more than two standard deviations to the left of the mean), that is a bullish indicator for SPY.

%br/
%br/

In this situation we should expect a return of 1.4% / week.
%br/
%br/
Since 1998 this opportunity appeared 134 times and offered a return of 187% (assuming a constant sized bet).

%br/
%br/

All 134 opportunities are listed below:
%br/
%br/

%pre.sql
  :preserve
    09:28:47 SQL> SELECT
    09:28:47   2  tkr
    09:28:47   3  ,ydate
    09:28:47   4  ,price1
    09:28:47   5  ,gain1week normalized_g1wk
    09:28:47   6  FROM batsig
    09:28:47   7  WHERE mvg_avg_slope <= -0.005
    09:28:47   8  ORDER by ydate
    09:28:47   9  /
    
    TKR         YDATE          PRICE1 NORMALIZED_G1WK
    ----------- ---------- ---------- ---------------
    SPY         1998-08-14      85.37      .022958885
    SPY         1998-08-31      77.23      .072899132
    SPY         1998-09-01      80.49      .004472605
    SPY         1998-09-04      78.63      .058247488
    SPY         2000-10-12     109.72      .046481954
    SPY         2001-03-01     102.97      .020200058
    SPY         2001-03-02     102.15       -.0020558
    SPY         2001-03-05     103.08      -.05335662
    SPY         2001-03-12      97.58      -.00348432
    SPY         2001-03-14      97.22      -.04320099
    SPY         2001-03-15      97.25      -.05316195
    SPY         2001-03-16       95.3        -.004617
    SPY         2001-03-19      97.24      -.01203209
    SPY         2001-03-20      94.63      .035929409
    SPY         2001-03-21      93.02      .024725865
    SPY         2001-03-22      92.08      .039205039
    SPY         2001-04-03      91.47      .056739915
    SPY         2001-04-04      91.85       .05302123
    SPY         2001-04-06      93.88       .03792075
    SPY         2001-09-17      86.67      -.03092189
    SPY         2001-09-18      86.46      -.01839001
    SPY         2001-09-19      84.72      -.00177054
    SPY         2001-09-20      82.02      .039990246
    SPY         2001-09-21      81.14      .073576534
    SPY         2001-09-24      83.99      .035480414
    SPY         2001-09-25      84.87      .037586898
    SPY         2001-09-26      84.57      .058767885
    SPY         2001-09-27       85.3      .050644783
    SPY         2001-09-28      87.11       .02674779
    SPY         2001-10-01      86.97      .021731632
    SPY         2001-10-02      88.06      .003633886
    SPY         2002-06-25      81.89      -.02649896
    SPY         2002-07-10      77.33      -.01500065
    SPY         2002-07-12       77.1      -.07769131
    SPY         2002-07-16      76.02        -.117206
    SPY         2002-07-17      76.17      -.06629907
    SPY         2002-07-18       73.7      -.04328358
    SPY         2002-07-19      71.11      .010406413
    SPY         2002-07-22         69      .092028986
    SPY         2002-07-23      67.11       .13753539
    SPY         2002-07-24      71.12      .075928009
    SPY         2002-07-25      70.51      .056871366
    SPY         2002-07-26      71.85      .013917884
    SPY         2002-07-29      75.35      -.06675514
    SPY         2002-08-05      70.32      .081769056
    SPY         2002-08-06      72.68      .027517887
    SPY         2002-09-19       71.1       .01673699
    SPY         2002-09-20      71.12        -.018982
    SPY         2002-09-23      70.54      -.02239864
    SPY         2002-09-24       69.4      .041498559
    SPY         2002-09-25      71.12      -.01420135
    SPY         2002-09-27      69.77       -.0235058
    SPY         2002-09-30      68.96       -.0324826
    SPY         2002-10-07      66.72      .069544365
    SPY         2002-10-08      67.77      .103585657
    SPY         2002-10-09      65.85      .108276386
    SPY         2002-10-10      67.99      .094719812
    SPY         2003-02-11      70.69      .020936483
    SPY         2003-02-12      69.56      .027170788
    SPY         2003-02-13      69.78      .034250502
    SPY         2008-01-22      121.1       .03971924
    SPY         2008-01-25     123.25      .049168357
    SPY         2008-01-28     125.29      .019075744
    SPY         2008-07-07     116.97      -.01838078
    SPY         2008-07-15      113.2      .053710247
    SPY         2008-09-29     104.82      -.05981683
    SPY         2008-10-02     105.26      -.18915067
    SPY         2008-10-03     103.84      -.19799692 A loss of 19.8% !
    SPY         2008-10-06      98.55      -.03216641
    SPY         2008-10-07      94.13      -.00169978
    SPY         2008-10-08      91.76      -.07683086
    SPY         2008-10-09      85.35      .033860574
    SPY         2008-10-10      83.28      .053314121
    SPY         2008-10-13      95.38      -.02505766
    SPY         2008-10-14      93.97      -.04001277
    SPY         2008-10-15      84.71      .006964939
    SPY         2008-10-16      88.24      -.02209882
    SPY         2008-10-17      87.72      -.06623347
    SPY         2008-10-20      92.99      -.15044628
    SPY         2008-10-21      90.21      -.02194879
    SPY         2008-10-22       85.3      .026846424
    SPY         2008-10-23      86.29      .050179627
    SPY         2008-10-24      81.91      .112440483
    SPY         2008-10-27         79      .156835443
    SPY         2008-10-28      88.23      .070950924
    SPY         2008-10-29      87.59      .033451307
    SPY         2008-10-30      90.62      -.05638932
    SPY         2008-10-31      91.12      -.03061896
    SPY         2008-11-03      91.39      -.04617573
    SPY         2008-11-11      84.48      -.02994792
    SPY         2008-11-12      80.76      -.05027241
    SPY         2008-11-18      81.95      -.01635143
    SPY         2008-11-19       76.7      .091655802
    SPY         2008-11-20         71      .194084507 A gain of 19.4% !
    SPY         2008-11-21      74.83      .032607243
    SPY         2008-12-01      77.27       .10832147
    SPY         2008-12-02      80.24      .049725823
    SPY         2008-12-03      82.17      .032006815
    SPY         2008-12-04      80.27      .031020306
    SPY         2009-01-20      76.44      .049058085
    SPY         2009-02-03      79.44      -.00742699
    SPY         2009-02-04      79.06      .003162155
    SPY         2009-02-05      80.23      -.01071918
    SPY         2009-02-23      70.82      -.05422197
    SPY         2009-02-26      71.74      -.09018679
    SPY         2009-02-27      70.14      -.06786427
    SPY         2009-03-02      66.98       -.0352344
    SPY         2009-03-03      66.48      .029933815
    SPY         2009-03-04      68.05      .012637766
    SPY         2009-03-05      65.27      .097441397
    SPY         2009-03-06      65.38      .104160294
    SPY         2009-03-09      64.62      .113741876
    SPY         2009-03-10      68.47      .083248138
    SPY         2009-03-11      68.91      .100420839
    SPY         2010-05-20     104.39       .02988792
    SPY         2010-05-21     105.91      .002360495
    SPY         2010-05-24     104.55      -.00162602
    SPY         2010-05-25     104.66      .023218039
    SPY         2010-05-26     104.03      .032971258
    SPY         2010-05-28     106.16      -.03541824
    SPY         2011-08-04     119.64      -.02432297
    SPY         2011-08-05     119.46      -.01632346
    SPY         2011-08-08     111.68      .074498567
    SPY         2011-08-09     116.88      .017881588
    SPY         2011-08-10     111.71      .065705845
    SPY         2011-08-11     116.73      -.02407265
    SPY         2011-08-12     117.51      -.04637903
    SPY         2011-08-17     119.05      -.01327173
    SPY         2011-08-18     113.92      .015449438
    SPY         2011-08-19     112.06      .047296091
    SPY         2011-08-22     112.15      .076593848
    SPY         2011-08-23     115.84      .044975829
    SPY         2011-08-24     117.47      .035072785
    SPY         2011-08-25     115.68       .04011065
    
    134 rows selected.
    
    Elapsed: 00:00:00.00
    09:28:47 SQL> 
    09:28:47 SQL> 
    09:28:47 SQL> exit
    Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    With the Partitioning, OLAP, Data Mining and Real Application Testing options
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 
    oracle@z2:/pt/s/rluck/svmd/bp$ 
%br/
%br/
Next, I show how to visualize the negative correlation between moving average slope and gain as a scatter plot.
%br/
%br/
I use SQL and then R to create a plot:
%br/

%pre.sql
  :preserve
    --
    -- masg.sql
    --
    
    -- I use this script to create 2 columns:
    -- Mvg Avg Slope (mas)
    -- Gain 1 week (g1w)
    SET COLSEP ","
    
    SELECT
    mvg_avg_slope mas
    ,gain1week    g1w
    FROM batsig
    WHERE ABS(mvg_avg_slope)>= 0.004
    ORDER BY mvg_avg_slope;
    
    exit

%br/
%br/

%pre.rlanguage
  :preserve
    # masg004.r
    # I use this script to read masg004.csv which was created from masg.sql
    
    masg004 = read.csv("masg004.csv")
    
    # Define the .png file which will hold the output:
    png("masg004.png",width = 800, height = 800)
    
    plot(masg004$MAS,masg004$G1W,pch=20,col="black",xlim=c(-0.025,0.025),
      xlab="Scatter Plot: Mvg. Avg. Slope vs. Gain 1 Wk.",ylab="Gain 1 Wk.")
    grid(col="black")
    
    abline(v = 0.004, col="red",lwd=1)
    abline(v = -0.004, col="red",lwd=1)
    
    abline(v = 0.0045, col="green",lwd=1)
    abline(v = -0.0045, col="green",lwd=1)
    
    abline(v = 0.005, col="blue",lwd=1)
    abline(v = -0.005, col="blue",lwd=1)
    
    dev.off()


%img(src="/images/masg004.png")
%br/
%br/
The red vertical line in the above plot corresponds to this predicate:
%br/
%br/
SELECT data FROM batsig  WHERE ABS(mvg_avg_slope)>= 0.004

%br/
%br/
The green vertical line corresponds to this predicate:
%br/
%br/
SELECT data FROM batsig  WHERE ABS(mvg_avg_slope)>= 0.0045

%br/
%br/
The blue vertical line corresponds to this predicate:
%br/
%br/
SELECT data FROM batsig  WHERE ABS(mvg_avg_slope)>= 0.005
%br/
%br/
It is not obvious from the scatter plot but inspection of the SQL output from 
corr_spy.sql reveals that this predicate gives me the best results:
%br/
%br/
SELECT data FROM batsig  WHERE ABS(mvg_avg_slope)>= 0.005
%br/
%br/
Inspection of the plot, however, does reveal that if I draw a vertical line at -0.01 and slowly move it to the left, the proportion of dots above the 0.0 line increases.
%br/
%br/
I interpret this to mean that as moving average slope becomes more negative, the negative correlation between that slope and gain becomes stronger.
%br/
%br/

